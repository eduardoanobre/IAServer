# IAServer - Configuracao autocontida
spring.application.name=ia-processor
server.port=2042

# Spring Cloud Function
spring.cloud.function.definition=processIa

# Stream Bindings
spring.cloud.stream.bindings.processIa-in-0.destination=ia.requests
spring.cloud.stream.bindings.processIa-in-0.group=ia-processor
spring.cloud.stream.bindings.processIa-in-0.content-type=application/json
spring.cloud.stream.bindings.processIa-in-0.consumer.maxAttempts=5
spring.cloud.stream.bindings.processIa-in-0.consumer.backOffInitialInterval=1000
spring.cloud.stream.bindings.processIa-in-0.consumer.backOffMultiplier=2.0
spring.cloud.stream.bindings.processIa-in-0.consumer.backOffMaxInterval=30000
spring.cloud.stream.bindings.processIa-in-0.consumer.concurrency=3

spring.cloud.stream.bindings.processIa-out-0.destination=ia.responses
spring.cloud.stream.bindings.processIa-out-0.content-type=application/json

# Kafka Binder
spring.cloud.stream.kafka.binder.brokers=192.168.10.116:9092
spring.cloud.stream.kafka.binder.auto-create-topics=true
spring.cloud.stream.kafka.binder.configuration.max.poll.records=10
spring.cloud.stream.kafka.binder.configuration.enable.auto.commit=false

# Configuracoes de serializacao
spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.binder.configuration.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.cloud.stream.kafka.binder.configuration.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.configuration.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Kafka Consumer
spring.cloud.stream.kafka.bindings.processIa-in-0.consumer.enableDlq=true
spring.cloud.stream.kafka.bindings.processIa-in-0.consumer.dlqName=ia.requests.DLT
spring.cloud.stream.kafka.bindings.processIa-in-0.consumer.configuration.max.partition.fetch.bytes=1048576
spring.cloud.stream.kafka.bindings.processIa-in-0.consumer.configuration.fetch.max.bytes=10485760

# Kafka Producer
spring.cloud.stream.kafka.bindings.processIa-out-0.producer.configuration.enable.idempotence=true
spring.cloud.stream.kafka.bindings.processIa-out-0.producer.configuration.acks=all
spring.cloud.stream.kafka.bindings.processIa-out-0.producer.configuration.max.in.flight.requests.per.connection=5
spring.cloud.stream.kafka.bindings.processIa-out-0.producer.configuration.linger.ms=0
spring.cloud.stream.kafka.bindings.processIa-out-0.producer.configuration.delivery.timeout.ms=120000
spring.cloud.stream.kafka.bindings.processIa-out-0.producer.configuration.compression.type=zstd

# Resilience4j Circuit Breakers
resilience4j.circuitbreaker.instances.iaClient.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.iaClient.slidingWindowSize=20
resilience4j.circuitbreaker.instances.iaClient.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.iaClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.iaClient.waitDurationInOpenState=10s

resilience4j.circuitbreaker.instances.assistantsClient.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.assistantsClient.slidingWindowSize=20
resilience4j.circuitbreaker.instances.assistantsClient.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.assistantsClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.assistantsClient.waitDurationInOpenState=10s

# Resilience4j Retry
resilience4j.retry.instances.iaClientRetry.maxAttempts=3
resilience4j.retry.instances.iaClientRetry.waitDuration=2s
resilience4j.retry.instances.assistantsClientRetry.maxAttempts=3
resilience4j.retry.instances.assistantsClientRetry.waitDuration=2s

# Configuracoes IA
ia.responses.topic=processIa-out-0

# Encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# Logging opcional
#logging.level.org.springframework.cloud.stream=DEBUG
#logging.level.org.springframework.kafka=DEBUG
#logging.level.org.apache.kafka=INFO

