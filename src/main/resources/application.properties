# ============================================================================
# IA SERVER SDK - Config default do Kafka
# Este arquivo vai empacotado no jar do IAServer
# ============================================================================

# ============================================================================
# KAFKA BINDER
# ============================================================================
spring.cloud.stream.kafka.binder.auto-create-topics=true
spring.cloud.stream.kafka.binder.auto-add-partitions=false
spring.cloud.stream.kafka.binder.required-acks=1
spring.cloud.stream.kafka.binder.min-partition-count=1
spring.cloud.stream.kafka.binder.replication-factor=1

# Serializers globais
spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.binder.configuration.value.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.binder.configuration.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.configuration.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.configuration.spring.json.use.type.headers=false

# ============================================================================
# CONSUMER - Otimizado para processamento de IA
# ============================================================================
spring.cloud.stream.kafka.binder.consumer-properties.auto.offset.reset=latest
spring.cloud.stream.kafka.binder.consumer-properties.enable.auto.commit=true
spring.cloud.stream.kafka.binder.consumer-properties.auto.commit.interval.ms=1000
spring.cloud.stream.kafka.binder.consumer-properties.max.poll.records=1
spring.cloud.stream.kafka.binder.consumer-properties.max.poll.interval.ms=300000
spring.cloud.stream.kafka.binder.consumer-properties.session.timeout.ms=30000
spring.cloud.stream.kafka.binder.consumer-properties.heartbeat.interval.ms=10000

# ============================================================================
# PRODUCER - Otimizado para respostas de IA
# ============================================================================
spring.cloud.stream.kafka.binder.producer-properties.acks=1
spring.cloud.stream.kafka.binder.producer-properties.retries=3
spring.cloud.stream.kafka.binder.producer-properties.enable.idempotence=true
spring.cloud.stream.kafka.binder.producer-properties.compression.type=snappy
spring.cloud.stream.kafka.binder.producer-properties.request.timeout.ms=25000
spring.cloud.stream.kafka.binder.producer-properties.delivery.timeout.ms=30000

# ============================================================================
# BINDINGS DEFAULTS - Podem ser sobrescritos pela aplicacao
# ============================================================================

# IA Processor Consumer defaults
spring.cloud.stream.bindings.processIaConsumer-in-0.consumer.max-attempts=3
spring.cloud.stream.bindings.processIaConsumer-in-0.consumer.back-off-initial-interval=1000
spring.cloud.stream.bindings.processIaConsumer-in-0.consumer.back-off-max-interval=10000
spring.cloud.stream.bindings.processIaConsumer-in-0.consumer.auto-startup=true
spring.cloud.stream.bindings.processIaConsumer-in-0.consumer.concurrency=2
spring.cloud.stream.bindings.processIaConsumer-in-0.content-type=text/plain

# IA Response Handler defaults
spring.cloud.stream.bindings.iaReplies-in-0.consumer.max-attempts=1
spring.cloud.stream.bindings.iaReplies-in-0.consumer.auto-startup=true
spring.cloud.stream.bindings.iaReplies-in-0.consumer.concurrency=1
spring.cloud.stream.bindings.iaReplies-in-0.content-type=text/plain

# ============================================================================
# IA SDK CONFIGURATION
# ============================================================================
ia.base64.wrapper.enabled=true
ia.processing.max-concurrent-requests=10
ia.processing.request-timeout=300000
ia.cache.duplicate-detection.enabled=true
ia.cache.duplicate-detection.max-size=1000

# Message types
ia.message.types.ia-request=IA_REQUEST
ia.message.types.ia-response=IA_RESPONSE
ia.message.types.startup-test=STARTUP_TEST
ia.message.types.connection-test=CONNECTION_TEST

# Test prefixes
ia.test.chatid.prefix=test-
ia.connection.test.chatid.prefix=test-

# Topics (podem ser sobrescritos)
ia.kafka.topics.requests=ia.requests
ia.kafka.topics.responses=ia.responses

# ============================================================================
# HEALTH AND MONITORING
# ============================================================================
management.health.kafka.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,kafka